#!/usr/bin/env bash

service=$1

help() {
    echo "shell [service]"
    echo
    echo To shell into a service the service must be running.
    echo
    echo  - website
    echo  - rails
    echo  - tmux
    echo  - mysql
    echo  - redis
    echo  - redis-cli
    echo  - tooling-invoker
    echo  - tooling-orchestrator
    echo  - git-server
}

case "$service" in
"" | "--help" | "-h")
    help
    ;;
"redis")
    # hack a snazzy redis prompt despite it being a stock image
    docker-compose exec --env SUDO_USER=x --env SUDO_PS1=x --env PS1="{^_^} redis\n      \w % " redis bash
    ;;
"website")
    docker-compose exec --env SUDO_USER=x --env SUDO_PS1=x --env PS1="{^_^} website\n      \w % " website /bin/bash
    ;;
"rails")
    docker-compose exec website /bin/bash '-c' 'bundle exec rails console'
    ;;
"tmux")
    docker-compose exec website overmind 'c' 'server'
    ;;
"mysql")
    docker-compose exec mysql mysql -ppassword
    ;;
"redis-cli")
    docker-compose exec redis redis-cli
    ;;
"tooling-invoker")
    docker-compose exec --env PS1="{^_^} tooling-invoker\n      \w % " tooling-invoker /bin/bash
    ;;
"tooling-orchestrator")
    docker-compose exec --env PS1="{^_^} tooling-orchestrator\n      \w % " tooling-orchestrator /bin/sh
    ;;
"git-server")
    docker-compose exec --env PS1="{^_^} git-server\n      \w % " git-server /bin/sh
    ;;
esac
