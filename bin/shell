#!/bin/bash

service=$1

help() {
    echo "shell [service]"
    echo
    echo To shell into a service the service must be running.
    echo
    echo  - website
    echo  - rails
    echo  - tmux
    echo  - mysql
    echo  - redis
    echo  - redis-cli
    echo  - tooling-invoker
    echo  - tooling-orchestrator
}

PREFIX=v3-docker-compose

case "$service" in
"" | "--help" | "-h")
    help
    ;;
"redis")
    # hack a snazzy redis prompt despite it being a stock image
    docker exec --env SUDO_USER=x --env SUDO_PS1=x --env PS1="{^_^} redis\n      \w % " \
    -it ${PREFIX}_redis_1 bash
    ;;
"website")
    docker exec --env SUDO_USER=x --env SUDO_PS1=x --env PS1="{^_^} website\n      \w % " \
    -it ${PREFIX}_website_1 /bin/bash
    ;;
"rails")
    docker exec -it ${PREFIX}_website_1 /bin/bash '-c' 'bundle exec rails console'
    ;;
"tmux")
    docker exec -it ${PREFIX}_website_1 overmind 'c' 'server'
    ;;
"mysql")
    docker exec -it ${PREFIX}_mysql_1 mysql -ppassword
    ;;
"redis-cli")
    docker exec -it ${PREFIX}_redis_1 redis-cli
    ;;
"tooling-invoker")
    docker exec --env PS1="{^_^} tooling-invoker\n      \w % " \
    -it ${PREFIX}_tooling-invoker_1 /bin/bash
    ;;
"tooling-orchestrator")
    docker exec --env PS1="{^_^} tooling-orchestrator\n      \w % " \
    -it ${PREFIX}_tooling-orchestrator_1 /bin/sh
    ;;
esac